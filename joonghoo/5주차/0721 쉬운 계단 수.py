# 백준_10844_쉬운 계단 수_DP_실버 1
# 점화식을 2차원 list로 나타내야 하기 때문에 상당히 어렵게 느껴졌던 문제
# dp[n][j] 에서 n은 계단수의 길이를 나타내고, j는 계단 수 끝의 숫자 이다
# n이 1 증가할때 마다 j 다음에 올 계단 수는 j의 +-1 라는 것을 알 수 있다
# 이때, j가 0 일때는 다음에 올 계단 수가 1밖에 안된다
# 마찬가지로, j가 9 일때는 다음에 올 계단 수가 8밖에 안된다

n = int(input())
dp = [[0]*10 for _ in range(n+1)]
for i in range(1, 10):  # 계단 수의 길이가 1일때
    dp[1][i] = 1

mod = 1000000000
for i in range(2, n+1):
    for j in range(10):
        if j == 0:  # 계단 수 끝의 숫자가 0 일때
            dp[i][0] = dp[i-1][1]  # 다믕에 올 숫자는 1이다
        elif j == 9:  # 계단 수 끝의 숫자가 9 일때
            dp[i][9] = dp[i-1][8]  # 다음에 올 숫자는 8이다
        else:  # 계단 수 끝의 숫자가 1 ~ 8 일때
            dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1]
                        ) % mod  # 다음에 올 숫자는 j의 +-1 이다

print(sum(dp[n]) % mod)
