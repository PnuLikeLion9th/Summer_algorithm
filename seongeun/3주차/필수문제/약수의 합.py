#약수의 합
"""전략: 약수는 어떤 수를 나누어서 나머지가 0이 되는 수이므로 
         1부터 차례대로 나누어서 나머지가 0이 되는 수를 모아서 더하기."""
#성공
def solution(n):        #매개변수는 n 함수이름은 solution 
    a = 1               #a=1로 정해둔다 why 정수 1부터 나눌 것이므로
    b = list()          #n을 a로 나눴을때 나머지가 0이면 a를 넣을 list 만들어놓기
    while a <= n  :     #while문을 사용해서 a가 n과 같아질때까지 반복함
        if n % a == 0 : #while문 안에 if문을 넣어서 나머지가 0이면 list에 a값 추가한뒤에 a에 1 더함
            b.append(a)
            a += 1
        else :          #나머지가 0이 아니면 그냥 a에 1 더함
            a += 1
    
    return sum(b)       #list 요소들의 합을 return

"""전략 2: 사실 약수는 어떤 수의 제곱근까지만 나눠봐도 구할 수 있음 
대신 list에 a 뿐만 아니라 몫도 넣어줘야 함 - 큰 숫자에서는 속도가 빨라질듯"""
#실패
def solution(n):        
    a = 1               
    b = list()          
    while a <= n **(1/2)  :   #n의 제곱근까지만 계산하기
        if n % a == 0 : 
            b.extend([a,n/a]) #append는 요소 1개만 가능하므로 extend로 요소 2개 넣어줌
            a += 1
        else :          
            a += 1
    
    return sum(b) 
#실패원인: 대부분의 숫자를 넣으면 성공적으로 계산되지만 a와 n/a의 값이 같은 경우, 즉 n=1, n=25,,일 경우에는 숫자가 중복되서 실패함,,
#뭔가 방법이 있을것같음